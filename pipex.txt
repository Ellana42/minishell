-------------------------------------------------------------------------------------------------
Pipe : rediriger la sortie standard d'un processus vers l'entree standard d'un autre

cat test.txt | wc -l : redirection de la stdout de cat vers la stdin de wc

Normalement cat test.txt affiche le contenu dans la stdout (terminal) mais ici le resultat sera
envoye dans un tube où wc ira piocher ses donnes plutot que dans la stdin

+::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::+
|                       Entrée standard                      |
+::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::+
                                        |
                                        X
[=======]          +===============+    |    [=======]
[  cat  ] ---+---> |  Tube (Pipe)  | ---+--> [  wc   ] ---+
[=======]    |     +===============+         [=======]    |
             X                                            |
             |                                            v
+::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::+
|                       Sortie standard                      |
+::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::+

Chaque commande shell = un programme

execve() pour executer un programme depuis le programme actuel
access() pour verifier les permissions a un fichier
fork() pour creer des processus
waitpid() pour suspendre l'exe du proessus appelant en attendant qu'un fils change d'etat
pipe() pour faire communiquer deux processus